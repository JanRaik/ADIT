/*  -------------------------------------------------- */
/*  Generated by Enterprise Architect Version 7.5.844*/
/*  Created On : Friday, June 04, 2010 */
/*  DBMS       : Oracle */
/*  -------------------------------------------------- */

/* Create Tables */
CREATE TABLE &&ADIT_SCHEMA..ACCESS_RESTRICTION
(
	ID                  NUMBER(18) NOT NULL,	
	remote_application  VARCHAR2(50) NOT NULL,  /* Short name of remote application that uses ADIT for datastore. */
	user_code           VARCHAR2(50) NOT NULL,  /* Personal ID Code of user. */
	restriction         VARCHAR2(50)    		/* Type of restriction to be applied. "WRITE" - user/application cannot add, update or delete data; "READ" - user/application cannot read, add, update or delete any data. */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..ACCESS_RESTRICTION IS 'Access restrictions for user-application combination. Infos체steemidele saab m채채rata piiranguid kasutajate nimel tegevuste l채bi viimiseks rakenduses.';
COMMENT ON COLUMN &&ADIT_SCHEMA..ACCESS_RESTRICTION.remote_application  IS 'Short name of remote application that uses ADIT for datastore.';
COMMENT ON COLUMN &&ADIT_SCHEMA..ACCESS_RESTRICTION.user_code           IS 'Personal ID Code of user.';
COMMENT ON COLUMN &&ADIT_SCHEMA..ACCESS_RESTRICTION.restriction         IS 'Type of restriction to be applied. "WRITE" - user/application cannot add, update or delete data; "READ" - user/application cannot read, add, update or delete any data.';

CREATE TABLE &&ADIT_SCHEMA..ADIT_LOG
(
	ID                             NUMBER(18) NOT NULL,
	table_name                     VARCHAR2(50),	/* Name of table in which data was modified */
	column_name                    VARCHAR2(50),    /* Name of column in which data was modified */
	old_value                      VARCHAR2(4000),	/* Old value */
	new_value                      VARCHAR2(4000),	/* New value */
	log_date                       DATE,			/* Date and time the data was modified */
	primary_key_value			   VARCHAR2(100),	/* Primary key value of changed record */
	remote_application_short_name  VARCHAR2(50),	/* Application that modified data */
	xtee_user_code                 VARCHAR2(50),	/* Personal ID code from X-Road request */
	xtee_institution_code          VARCHAR2(50),	/* Organization code from X-Road request */
	db_user                        VARCHAR2(50)		/* Database user name */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..ADIT_LOG IS 'Contains log of all data changes in database (except FILE_DATA column in DOCUMENT_FILES table).';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_LOG.table_name                     IS 'Name of table in which data was modified';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_LOG.column_name                    IS 'Name of column in which data was modified';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_LOG.old_value                      IS 'Old value';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_LOG.new_value                      IS 'New value';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_LOG.log_date                       IS 'Date and time the data was modified';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_LOG.primary_key_value              IS 'Primary key value of changed record';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_LOG.remote_application_short_name  IS 'Application that modified data';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_LOG.xtee_user_code                 IS 'Personal ID code from X-Road request';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_LOG.xtee_institution_code          IS 'Organization code from X-Road request';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_LOG.db_user                        IS 'Database user name';

CREATE TABLE &&ADIT_SCHEMA..ADIT_USER
(
	user_code                   VARCHAR2(50) NOT NULL,	/* Users personal ID code or registry code including country prefix. For example "EE38407089945". */
	full_name                   VARCHAR2(255),			/* Users full name */
	usertype                    VARCHAR2(50) NOT NULL,	/* Reference to user type */
	active                      NUMBER(1) DEFAULT 1,	/* Indicates wheather or not the user is active. "1" = active, "0" = inactive. */
	dvk_org_code                VARCHAR2(50),			/* This column contains a value only if user uses DEC to send and receive documents. Contains registry code of usesrs DEC organization. */
	dvk_subdivision_short_name  VARCHAR2(50),			/* This column contains a value only if user uses DEC to send and receive documents. Contains short name of users DEC subdivision. */
	dvk_occupation_short_name   VARCHAR2(50),			/* This column contains a value only if user uses DEC to send and receive documents. Contains short name of users DEC occupation. */
	disk_quota                  NUMBER(18),				/* User disk quota in bytes. Disk quota configured here overrides disk quota values configured on user type or application levels. */
	deactivation_date			DATE					/* Date and time when user account was deactivated */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..ADIT_USER IS 'User account data. User account can belong to a person (identified by personal ID code) or to an organization (identified by registry code).';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_USER.user_code                   IS 'Users personal ID code or registry code including country prefix. For example "EE38407089945".';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_USER.full_name                   IS 'Users full name';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_USER.usertype                    IS 'Reference to user type';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_USER.active                      IS 'Indicates wheather or not the user is active. "1" = active, "0" = inactive.';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_USER.dvk_org_code                IS 'This column contains a value only if user uses DEC to send and receive documents. Contains registry code of usesrs DEC organization.';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_USER.dvk_subdivision_short_name  IS 'This column contains a value only if user uses DEC to send and receive documents. Contains short name of users DEC subdivision.';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_USER.dvk_occupation_short_name   IS 'This column contains a value only if user uses DEC to send and receive documents. Contains short name of users DEC occupation.';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_USER.disk_quota                  IS 'User disk quota in bytes. Disk quota configured here overrides disk quota values configured on user type or application levels.';
COMMENT ON COLUMN &&ADIT_SCHEMA..ADIT_USER.deactivation_date           IS 'Date and time when user account was deactivated';

CREATE TABLE &&ADIT_SCHEMA..DOCUMENT
(
	ID                      NUMBER(12) NOT NULL,        /* Unique identifier */
	guid                    VARCHAR2(50),               /* Documents globally unique identifier. If document was received from DEC then GUID comes from DEC. If document is created in ADIT then GUID will be generated by ADIT. */
	title                   VARCHAR2(255),              /* Document title */
	type                    VARCHAR2(50) NOT NULL,		/* Short name of document type */
	creator_code            VARCHAR2(50) NOT NULL,      /* Personal ID code or registry code of document creator */
	creator_name            VARCHAR2(255) NULL,         /* Document creators name (as it was when document was created) */
	creator_user_code       VARCHAR2(50) NULL,          /* Personal ID code of document creator (if document creator is an organization) */
	creator_user_name       VARCHAR2(255) NULL,         /* Name of the person who created this document (if document creator is an organization) */
	creation_date           DATE,                       /* Document creation date and time */
	remote_application      VARCHAR2(50),               /* Short name of application that was used to add this document */
	last_modified_date      DATE,                       /* Date and time of last modification */
	document_dvk_status_id  NUMBER(12),                 /* DEC status identifier if document is received or sent using DEC */
	dvk_id                  NUMBER(12),                 /* DEC identifier if document was received from DEC */
	document_wf_status_id   NUMBER(12),                 /* Document workflow status ID */
	parent_id               NUMBER(12),                 /* Original document ID. Is used to reference the original document if for example current document is a new version of existing document. */
	locked                  NUMBER(1) DEFAULT 0,        /* Indicates if this document is locked (cannot be modified). "1" = locked, "0" = not locked. */
	locking_date            DATE,                       /* Date and time of locking */
	signable                NUMBER(1) DEFAULT 0,        /* Indicates if this document can be signed. "1" = can be signed, "0" = cannot be signed. */
	deflated                NUMBER(1) DEFAULT 0,        /* Indicates if this document is deflated (file contents removed). "1" = deflated, "0" = not deflated. */
	deflate_date            DATE,                       /* Date and time of deflation */
	deleted                 NUMBER(1),                  /* Indicates if this document is deleted. "1" = deleted, "0" = not deleted. */
	invisible_to_owner		NUMBER(1,0) NULL,           /* Indicates if this document has been made invisible to its owner. Is used when document has been sent to someone else and owner wants to delete it from his/her own view. */
	signed					NUMBER(1,0) NULL            /* Indicates if this document has been signed. */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..DOCUMENT IS 'Document data';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.ID                      IS 'Unique identifier';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.guid                    IS 'Documents globally unique identifier. If document was received from DEC then GUID comes from DEC. If document is created in ADIT then GUID will be generated by ADIT.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.title                   IS 'Document title';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.type                    IS 'Short name of document type';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.creator_code            IS 'Personal ID code or registry code of document creator';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.creator_name            IS 'Document creators name (as it was when document was created)';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.creator_user_code       IS 'Personal ID code of document creator (if document creator is an organization)';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.creator_user_name       IS 'Name of the person who created this document (if document creator is an organization)';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.creation_date           IS 'Document creation date and time';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.remote_application      IS 'Short name of application that was used to add this document';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.last_modified_date      IS 'Date and time of last modification';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.document_dvk_status_id  IS 'DEC status identifier if document is received or sent using DEC';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.dvk_id                  IS 'DEC identifier if document was received from DEC';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.document_wf_status_id   IS 'Document workflow status ID';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.parent_id               IS 'Original document ID. Is used to reference the original document if for example current document is a new version of existing document.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.locked                  IS 'Indicates if this document is locked (cannot be modified). "1" = locked, "0" = not locked.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.locking_date            IS 'Date and time of locking';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.signable                IS 'Indicates if this document can be signed. "1" = can be signed, "0" = cannot be signed.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.deflated                IS 'Indicates if this document is deflated (file contents removed). "1" = deflated, "0" = not deflated.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.deflate_date            IS 'Date and time of deflation';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.deleted                 IS 'Indicates if this document is deleted. "1" = deleted, "0" = not deleted.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.invisible_to_owner      IS 'Indicates if this document has been made invisible to its owner. Is used when document has been sent to someone else and owner wants to delete it from his/her own view.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT.signed                  IS 'Indicates if this document has been signed.';


CREATE TABLE &&ADIT_SCHEMA..DOCUMENT_DVK_STATUS
(
	ID           NUMBER(12) NOT NULL,                   /* Unique identifier of DEC status */
	description  VARCHAR2(4000)                         /* Status description */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..DOCUMENT_DVK_STATUS IS 'Document DEC status list (same values as in DEC). There are following statuses: 100 = Not set, 101 = Sending, 102 = Sent, 103 = Canceled';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_DVK_STATUS.ID           IS 'Unique identifier of DEC status';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_DVK_STATUS.description  IS 'Status description';

CREATE TABLE &&ADIT_SCHEMA..DOCUMENT_FILE
(
	ID               			NUMBER(12) NOT NULL,               /* Unique identifier */
	document_id      			NUMBER(12) NOT NULL,               /* ID of document this file belongs to */
	file_name        			VARCHAR2(255) NOT NULL,            /* File name */
	content_type     			VARCHAR2(255),                     /* MIME type of file */
	description      			VARCHAR2(4000),                    /* File description */
	file_data        			BLOB,                              /* File contents (binary data) */
	file_size_bytes  			NUMBER(38),                        /* File size in bytes */
	deleted          			NUMBER(1) DEFAULT 0,               /* Indicates if this file is deleted (contents removed) */
	document_file_type_id		NUMBER(18) DEFAULT (1) NOT NULL,   /* File type ID */
	file_data_in_ddoc			NUMBER(1,0) NULL,                  /* Shows whether or not file contents should be aquired from signature container */
	ddoc_datafile_id			VARCHAR(5) NULL,                   /* ID of corresponding DataFile in signature container */
	ddoc_datafile_start_offset 	NUMBER(18) NULL,                   /* First character index of current file in corresponding signature container */
	ddoc_datafile_end_offset 	NUMBER(18) NULL                    /* Last character index of current file in corresponding signature container */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..DOCUMENT_FILE 								IS 'Document files';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.ID               			IS 'Unique identifier';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.document_id      			IS 'ID of document this file belongs to';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.file_name        			IS 'File name';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.content_type     			IS 'MIME type of file';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.description      			IS 'File description';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.file_data        			IS 'File contents (binary data)';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.file_size_bytes  			IS 'File size in bytes';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.deleted          			IS 'Indicates if this file is deleted (contents removed)';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.document_file_type_id 		IS 'File type ID';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.file_data_in_ddoc 			IS 'Shows whether or not file contents should be aquired from signature container';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.ddoc_datafile_id 			IS 'ID of corresponding DataFile in signature container';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.ddoc_datafile_start_offset 	IS 'First character index of current file in corresponding signature container';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE.ddoc_datafile_end_offset 	IS 'Last character index of current file in corresponding signature container';

CREATE TABLE &&ADIT_SCHEMA..DOCUMENT_HISTORY
(
	ID                     NUMBER(12) NOT NULL,         /* Unique identifier */
	document_id            NUMBER(12) NOT NULL,         /* ID of related document */
	document_history_type  VARCHAR2(50),                /* Short name of history type */
	description            VARCHAR2(4000),              /* Detailed description of document history event */
	event_date             DATE,                        /* Date and time of history event */
	user_code              VARCHAR2(50),                /* Personal ID code or registry code of user who performed the action */
	user_name              VARCHAR2(255),               /* Name of user who performed the action (at the moment of perforing the action). */
	remote_application     VARCHAR2(50),                /* Short name of application that was used to perform the action */
	notification_status    VARCHAR2(50),                /* Notification sending status. If notification is not sent then "SAADA", if notification is sent then "SAADETUD". If no notification has to be sent then empty (NULL). */
	xtee_notification_id   VARCHAR2(50),                /* Notification ID from notification calendar (teavituskalender) X-Road database. This column has a value only if notification was successfully sent to notification calendar. */
	xtee_user_code         VARCHAR2(50),                /* Personal ID code of person who executed the X-Road request. It is intended to identify the person who performed the action if the action was performed under organization account. */
	xtee_user_name         VARCHAR2(255)                /* Personal ID code of person who executed the X-Road request (if it waspossible to find out the name) */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..DOCUMENT_HISTORY                         IS 'Document history. History records will be created when some action is performed on a document.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY.ID                     IS 'Unique identifier';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY.document_id            IS 'ID of related document';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY.document_history_type  IS 'Short name of history type';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY.description            IS 'Detailed description of document history event';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY.event_date             IS 'Date and time of history event';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY.user_code              IS 'Personal ID code or registry code of user who performed the action';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY.user_name              IS 'Name of user who performed the action (at the moment of perforing the action).';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY.remote_application     IS 'Short name of application that was used to perform the action';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY.notification_status    IS 'Notification sending status. If notification is not sent then "SAADA", if notification is sent then "SAADETUD". If no notification has to be sent then empty (NULL).';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY.xtee_notification_id   IS 'Notification ID from notification calendar (teavituskalender) X-Road database. This column has a value only if notification was successfully sent to notification calendar.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY.xtee_user_code         IS 'Personal ID code of person who executed the X-Road request. It is intended to identify the person who performed the action if the action was performed under organization account.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY.xtee_user_name         IS 'Personal ID code of person who executed the X-Road request (if it waspossible to find out the name)';

CREATE TABLE &&ADIT_SCHEMA..DOCUMENT_HISTORY_TYPE
(
	short_name   VARCHAR2(50) NOT NULL,                 /* Name of history event type. e.g. "esmane loomine" or "dokumendi muutmine". */
	description  VARCHAR2(4000)                         /* Description of history event type */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..DOCUMENT_HISTORY_TYPE               IS 'History event types';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY_TYPE.short_name   IS 'Name of history event type. e.g. "esmane loomine" or "dokumendi muutmine".';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_HISTORY_TYPE.description  IS 'Description of history event type.';

CREATE TABLE &&ADIT_SCHEMA..DOCUMENT_SHARING
(
	ID                NUMBER(12) NOT NULL,    /* Unikaalne identifikaator */
	document_id       NUMBER(12) NOT NULL,    /* Viide dokumendile */
	user_code         VARCHAR2(50) NOT NULL,    /* Viide kasutajale (isikukood), kellele dokument jagati */
	user_name		  VARCHAR2(255) NULL,		/* Kasutaja nimi (jagamise hetke seisuga) */
	sharing_type      VARCHAR2(50) NOT NULL,    /* Viide dokumendi jagamise t체체bile. Viidatakse kasutades dokumendi t체체bi l체hinime. */
	task_description  VARCHAR2(4000),    /* Jagamise eesm채rk. Toiming, mida jagamise adressaat peaks dokumendiga tegema. */
	creation_date     DATE,    /* Jagamise kuup채ev ja kellaaeg */
	dvk_status_id     NUMBER(12),    /* Dokumendi DVK staatuse ID. N채itab, millises staatuses on jagatud dokument adressaadi DVK-s. */
	wf_status_id      NUMBER(12),    /* T철철voo staatuse ID */
	last_access_date  DATE    /* Kuup채ev ja kellaaeg, millal viimati jagatud dokumendi andmeid vaadati. */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..DOCUMENT_SHARING IS 'Dokumendi jagamise andmed.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_SHARING.ID                IS 'Unikaalne identifikaator';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_SHARING.document_id       IS 'Viide dokumendile';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_SHARING.user_code         IS 'Viide kasutajale (isikukood), kellele dokument jagati';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_SHARING.user_name         IS 'Kasutaja nimi (jagamise hetke seisuga)';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_SHARING.sharing_type      IS 'Viide dokumendi jagamise t체체bile. Viidatakse kasutades dokumendi t체체bi l체hinime.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_SHARING.task_description  IS 'Jagamise eesm채rk. Toiming, mida jagamise adressaat peaks dokumendiga tegema.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_SHARING.creation_date     IS 'Jagamise kuup채ev ja kellaaeg';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_SHARING.dvk_status_id     IS 'Dokumendi DVK staatuse ID. N채itab, millises staatuses on jagatud dokument adressaadi DVK-s.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_SHARING.wf_status_id      IS 'T철철voo staatuse ID';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_SHARING.last_access_date  IS 'Kuup채ev ja kellaaeg, millal viimati jagatud dokumendi andmeid vaadati.';

CREATE TABLE &&ADIT_SCHEMA..DOCUMENT_SHARING_TYPE
(
	short_name   VARCHAR2(50) NOT NULL,    /* Dokumendi jagamise t체체bi l체hinimi. (Nt. "sending", "sharing"). L체hinimed on inglisekeelsed. */
	description  VARCHAR2(4000)    /* Dokumendi jagamise t체체bi kirjeldus. */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..DOCUMENT_SHARING_TYPE IS 'Dokumendi jagamise t체체bid: 
 1. Allkirjastamine 2. Jagamine 3. DVK Saatmine 4. ADIT Saatmine';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_SHARING_TYPE.short_name   IS 'Dokumendi jagamise t체체bi l체hinimi. (Nt. "sending", "sharing"). L체hinimed on inglisekeelsed.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_SHARING_TYPE.description  IS 'Dokumendi jagamise t체체bi kirjeldus.';

CREATE TABLE &&ADIT_SCHEMA..DOCUMENT_TYPE
(
	short_name   VARCHAR2(50) NOT NULL,    /* Dokumendi t체체bi l체hinimi. */
	description  VARCHAR2(4000)    /* Dokumendi t체체bi kirjeldus. */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..DOCUMENT_TYPE IS 'Dokumendi t체체pide kirjeldused. Neid liike lisandub t철철 k채igus, kuid esialgselt on olemas: 
 1. Kiri (letter) 2. Avaldus / Taotlus (application)';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_TYPE.short_name   IS 'Dokumendi t체체bi l체hinimi.';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_TYPE.description  IS 'Dokumendi t체체bi kirjeldus.';

CREATE TABLE &&ADIT_SCHEMA..DOCUMENT_WF_STATUS
(
	ID           NUMBER(12) NOT NULL,    /* Unikaalne identifikaator */
	description  VARCHAR2(4000),    /* T철철voo staatuse kirjeldus */
	name         VARCHAR2(50)    /* Dokumendi t철철voo staatuse nimetus. */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..DOCUMENT_WF_STATUS IS 'T철철voo staatused. Staatused on j채rgmised: 
 1. Puudub (lokaalse faili puhul) 2. Dokumente on puudu 3. J채rjekorras 4. Ootel 5. L천petatud 6. Tagasi l체katud 7. Teha 8. T철철tlemisel 9. Aktsepteeritud (v천etud t철철sse) 10. Salvestatud 11. Arhiveeritud 12. Saadetud';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_WF_STATUS.ID           IS 'Unikaalne identifikaator';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_WF_STATUS.description  IS 'T철철voo staatuse kirjeldus';
COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_WF_STATUS.name         IS 'Dokumendi t철철voo staatuse nimetus.';

CREATE TABLE &&ADIT_SCHEMA..DOWNLOAD_REQUEST_LOG
(
	ID                             NUMBER(18) NOT NULL,
	document_id                    NUMBER(12),
	document_file_id               NUMBER(12),
	request_date                   DATE,
	remote_application_short_name  VARCHAR2(50),
	user_code                      VARCHAR2(50),
	organization_code              VARCHAR2(50)
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..DOWNLOAD_REQUEST_LOG IS 'Allalaadimisp채ringute logi. Siia tabelisse kirjutatakse andmed juhul kui k채ivitatakse 체ks j채rgmistest p채ringutest: 
 - getDocument (juhul kui p채ringu parameetri "kas tagastada ka failide sisu" v채채rtuseks on "jah") - getDocumentFile';

CREATE TABLE &&ADIT_SCHEMA..ERROR_LOG
(
	ID                             NUMBER(18) NOT NULL,
	document_id                    NUMBER(12),    /* Dokument, mille t철철tlemisel v천i millega seotud tegevuse eba천nnestumisel viga tekkis. */
	error_date                     DATE,    /* Vea tekkimise aeg */
	remote_application_short_name  VARCHAR2(50),    /* P채ringu teinud infos체steemi l체hinimi. */
	user_code                      VARCHAR2(50),    /* P채ringuga seotud isiku kood */
	action_name                    VARCHAR2(255),    /* P채ringu v천i toimingu nimi, mille t채itmisel viga ilmnes. */
	error_level                    VARCHAR2(50),    /* Vea raskusaste (FATAL, ERROR, WARNING) */
	error_message                  VARCHAR2(4000)    /* Veateate sisu */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON COLUMN &&ADIT_SCHEMA..ERROR_LOG.document_id                    IS 'Dokument, mille t철철tlemisel v천i millega seotud tegevuse eba천nnestumisel viga tekkis.';
COMMENT ON COLUMN &&ADIT_SCHEMA..ERROR_LOG.error_date                     IS 'Vea tekkimise aeg';
COMMENT ON COLUMN &&ADIT_SCHEMA..ERROR_LOG.remote_application_short_name  IS 'P채ringu teinud infos체steemi l체hinimi.';
COMMENT ON COLUMN &&ADIT_SCHEMA..ERROR_LOG.user_code                      IS 'P채ringuga seotud isiku kood';
COMMENT ON COLUMN &&ADIT_SCHEMA..ERROR_LOG.action_name                    IS 'P채ringu v천i toimingu nimi, mille t채itmisel viga ilmnes.';
COMMENT ON COLUMN &&ADIT_SCHEMA..ERROR_LOG.error_level                    IS 'Vea raskusaste (FATAL, ERROR, WARNING)';
COMMENT ON COLUMN &&ADIT_SCHEMA..ERROR_LOG.error_message                  IS 'Veateate sisu';

CREATE TABLE &&ADIT_SCHEMA..METADATA_REQUEST_LOG
(
	ID                             NUMBER(18) NOT NULL,
	document_id                    NUMBER(12) NOT NULL,    /* Dokumendi ID, mida vaadati. */
	request_date                   DATE,    /* P채ringu tegemise aeg. */
	remote_application_short_name  VARCHAR2(50),    /* P채ringu teinud infos체steemi l체hinimi. */
	user_code                      VARCHAR2(50),    /* Isik, kelle nimel p채ring tehti (kas eraisikuna v천i juriidilise isiku esindajana) */
	organization_code              VARCHAR2(50)    /* Juriidilise isiku registrikood */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..METADATA_REQUEST_LOG IS 'Dokumendi ja metaandmete p채ringute logi. Andmed kirjutatakse siia tabelisse juhul kui k채ivitatakse 체ks j채rgmistest p채ringutest: 
 - getDocumentList - getDocument';
COMMENT ON COLUMN &&ADIT_SCHEMA..METADATA_REQUEST_LOG.document_id                    IS 'Dokumendi ID, mida vaadati.';
COMMENT ON COLUMN &&ADIT_SCHEMA..METADATA_REQUEST_LOG.request_date                   IS 'P채ringu tegemise aeg.';
COMMENT ON COLUMN &&ADIT_SCHEMA..METADATA_REQUEST_LOG.remote_application_short_name  IS 'P채ringu teinud infos체steemi l체hinimi.';
COMMENT ON COLUMN &&ADIT_SCHEMA..METADATA_REQUEST_LOG.user_code                      IS 'Isik, kelle nimel p채ring tehti (kas eraisikuna v천i juriidilise isiku esindajana)';
COMMENT ON COLUMN &&ADIT_SCHEMA..METADATA_REQUEST_LOG.organization_code              IS 'Juriidilise isiku registrikood';

CREATE TABLE &&ADIT_SCHEMA..NOTIFICATION_TYPE
(
	short_name   VARCHAR2(50) NOT NULL,    /* Teavituse t체체bi l체hinimi */
	description  VARCHAR2(4000)    /* Teavituse t체체bi kirjeldus. */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..NOTIFICATION_TYPE IS 'Teavituste t체체pide andmed. Teavituse t체bid on j채rgmised: 
 1. Saatmine (send) 2. Jagamine (share) 3. Vaatamine (view) 4. Muutmine (modify) 5. Allkirjastamine (sign)';
COMMENT ON COLUMN &&ADIT_SCHEMA..NOTIFICATION_TYPE.short_name   IS 'Teavituse t체체bi l체hinimi';
COMMENT ON COLUMN &&ADIT_SCHEMA..NOTIFICATION_TYPE.description  IS 'Teavituse t체체bi kirjeldus.';

CREATE TABLE &&ADIT_SCHEMA..REMOTE_APPLICATION
(
	short_name         VARCHAR2(50) NOT NULL,    /* Infos체steemi l체hinimi */
	name               VARCHAR2(50),    /* Infos체steemi t채ispikk nimi */
	organization_code  VARCHAR2(50) NOT NULL,    /* Infos체steemi omaniku (asutuse) registrikood */
	can_read           NUMBER(1) DEFAULT 0,    /* N채itab, kas infos체steemil on 체le체ldine 천igus rakenduse abil andmeid lugeda. */
	can_write          NUMBER(1) DEFAULT 0    /* N채itab, kas infos체steemil on 체le체ldine 천igus rakenduse abil andmeid muuta. */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..REMOTE_APPLICATION IS 'V채lised infos체steemid.';
COMMENT ON COLUMN &&ADIT_SCHEMA..REMOTE_APPLICATION.short_name         IS 'Infos체steemi l체hinimi';
COMMENT ON COLUMN &&ADIT_SCHEMA..REMOTE_APPLICATION.name               IS 'Infos체steemi t채ispikk nimi';
COMMENT ON COLUMN &&ADIT_SCHEMA..REMOTE_APPLICATION.organization_code  IS 'Infos체steemi omaniku (asutuse) registrikood';
COMMENT ON COLUMN &&ADIT_SCHEMA..REMOTE_APPLICATION.can_read           IS 'N채itab, kas infos체steemil on 체le체ldine 천igus rakenduse abil andmeid lugeda.';
COMMENT ON COLUMN &&ADIT_SCHEMA..REMOTE_APPLICATION.can_write          IS 'N채itab, kas infos체steemil on 체le체ldine 천igus rakenduse abil andmeid muuta.';

CREATE TABLE &&ADIT_SCHEMA..REQUEST_LOG
(
	ID                             NUMBER(18) NOT NULL,
	request                        VARCHAR2(50),    /* P채ringu nimi. Nt. "shareDocument" */
	document_id                    NUMBER(12),    /* Dokumendi ID, millega tegevus l채bi viidi */
	request_date                   DATE,    /* P채ringu tegemise aeg */
	remote_application_short_name  VARCHAR2(50),    /* P채ringu teinud infos체steemi l체hinimi */
	user_code                      VARCHAR2(50),    /* Isik, kelle nimel p채ring tehti (kas eraisikuna v천i juriidilise isiku esindajana) */
	organization_code              VARCHAR2(50),    /* Juriidilise isiku registrikood */
	additional_information         VARCHAR2(4000)    /* Lisainfo p채ringu kohta. Nt. "saveDocumentFile" p채ringu puhul kirjutatakse siia ka manuse ID. */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..REQUEST_LOG IS 'P채ringute tehtud muudatuste logi. Andmed kirjutatakse sellesse tabelisse juhul, kui k채ivitati 체ks j채rgmistest p채ringutest: 
 - saveDocument - saveDocumentFile - deleteDocumentFile - archieveDocument - deleteDocument - getDocumentHistory - sendDocument - shareDocument - unShareDocument - markDocumentViewed - prepareSignature - giveSiganture - modifyStatus';
COMMENT ON COLUMN &&ADIT_SCHEMA..REQUEST_LOG.request                        IS 'P채ringu nimi. Nt. "shareDocument"';
COMMENT ON COLUMN &&ADIT_SCHEMA..REQUEST_LOG.document_id                    IS 'Dokumendi ID, millega tegevus l채bi viidi';
COMMENT ON COLUMN &&ADIT_SCHEMA..REQUEST_LOG.request_date                   IS 'P채ringu tegemise aeg';
COMMENT ON COLUMN &&ADIT_SCHEMA..REQUEST_LOG.remote_application_short_name  IS 'P채ringu teinud infos체steemi l체hinimi';
COMMENT ON COLUMN &&ADIT_SCHEMA..REQUEST_LOG.user_code                      IS 'Isik, kelle nimel p채ring tehti (kas eraisikuna v천i juriidilise isiku esindajana)';
COMMENT ON COLUMN &&ADIT_SCHEMA..REQUEST_LOG.organization_code              IS 'Juriidilise isiku registrikood';
COMMENT ON COLUMN &&ADIT_SCHEMA..REQUEST_LOG.additional_information         IS 'Lisainfo p채ringu kohta. Nt. "saveDocumentFile" p채ringu puhul kirjutatakse siia ka manuse ID.';

CREATE TABLE &&ADIT_SCHEMA..SIGNATURE
(
	ID              NUMBER(12) NOT NULL,    /* Unikaalne identifikaator. */
	user_code       VARCHAR2(50),    /* Viide kasutajale, kes allkirja andis. */
	document_id     NUMBER(12) NOT NULL,    /* Viide dokumendile, millele allkiri anti. */
	signer_role     VARCHAR2(50),    /* Allkirja metaandmed - roll */
	resolution      VARCHAR2(100),    /* Allkirja metaandmed - resolutsioon */
	country         VARCHAR2(100),    /* Allkirja metaandmed - riik */
	county          VARCHAR2(100),    /* Allkirja metaandmed - maakond */
	city            VARCHAR2(100),    /* Allkirja metaandmed - linn */
	post_index      VARCHAR2(50),    /* Allkirja metaandmed - indeks */
	signer_code		VARCHAR2(20),    /* Allkirja metaandmed - allkirjastaja isikukood */
	signer_name		VARCHAR2(255),   /* Allkirja metaandmed - allkirjastaja nimi */
	signing_date    DATE,				/* Allkirja andmise kuup채ev ja kellaaeg */
	user_name		VARCHAR2(255) NULL
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..SIGNATURE IS 'Allkirjade tabel.';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.ID              IS 'Unikaalne identifikaator.';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.user_code       IS 'Viide kasutajale, kes allkirja andis.';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.document_id     IS 'Viide dokumendile, millele allkiri anti.';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.signer_role     IS 'Allkirja metaandmed - roll';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.resolution      IS 'Allkirja metaandmed - resolutsioon';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.country         IS 'Allkirja metaandmed - riik';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.county          IS 'Allkirja metaandmed - maakond';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.city            IS 'Allkirja metaandmed - linn';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.post_index      IS 'Allkirja metaandmed - indeks';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.signer_code     IS 'Allkirja metaandmed - allkirjastaja isikukood';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.signer_name     IS 'Allkirja metaandmed - allkirjastaja nimi';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.signing_date    IS 'Allkirja andmise kuup채ev ja kellaaeg';
COMMENT ON COLUMN &&ADIT_SCHEMA..SIGNATURE.user_name       IS 'Name of ADIT user who gave this signature';

CREATE TABLE &&ADIT_SCHEMA..USER_NOTIFICATION
(
	user_code          VARCHAR2(50) NOT NULL,    /* Viide kasutajale (isiku- v천i registrikood) */
	notification_type  VARCHAR2(50) NOT NULL    /* Teavituse t체체bi l체hinimi. */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..USER_NOTIFICATION IS 'Kasutajate teavituste andmed. Kasutaja saab m채채rata, kas ta soovib teatud s체ndmuste toimumisel saada teavitusi. Teavitused edastatakse teavituskalendrile vastavalt selles tabelis olevale seadistusele.';
COMMENT ON COLUMN &&ADIT_SCHEMA..USER_NOTIFICATION.user_code          IS 'Viide kasutajale (isiku- v천i registrikood)';
COMMENT ON COLUMN &&ADIT_SCHEMA..USER_NOTIFICATION.notification_type  IS 'Teavituse t체체bi l체hinimi.';

CREATE TABLE &&ADIT_SCHEMA..USERTYPE
(
	short_name   VARCHAR2(50) NOT NULL,    /* Kasutajat체체bi l체hinimi. */
	description  VARCHAR2(4000),    /* Kasutajat체체bi kirjeldus. */
	disk_quota   NUMBER(18)    /* M채채rab kasutajat체체bi vaikimisi kehtiva mahupiirangu baitides. */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..USERTYPE IS 'Kasutajat체체pide andmed. Kasutajat체체pe on kolm: 
 1. Eraisik (person) 2. Ettev천te (company) 3. Asutus (institution)';
COMMENT ON COLUMN &&ADIT_SCHEMA..USERTYPE.short_name   IS 'Kasutajat체체bi l체hinimi.';
COMMENT ON COLUMN &&ADIT_SCHEMA..USERTYPE.description  IS 'Kasutajat체체bi kirjeldus.';
COMMENT ON COLUMN &&ADIT_SCHEMA..USERTYPE.disk_quota   IS 'M채채rab kasutajat체체bi vaikimisi kehtiva mahupiirangu baitides.';


CREATE TABLE &&ADIT_SCHEMA..NOTIFICATION
(
	ID                             NUMBER(18) NOT NULL,      /* Teavituse unikaalne identifikaator kohalikus andmebaasis */
	user_code                      VARCHAR2(50),             /* Isiku v천i asutuse kood, kellele teavitus saadeti */
	document_id                    NUMBER(12) NOT NULL,      /* Teavitusega seotud dokumendi ID */
	event_date                     DATE,                     /* Teavitatava s체ndmuse toimumise kuup채ev ja kellaaeg */
	notification_type              VARCHAR2(50) NOT NULL,    /* Teavituse t체체bi l체hinimi */
	notification_text              VARCHAR2(4000),           /* Teavituse sisu */
	notification_id                NUMBER(12),               /* Teavituse ID teavituskalendris */
	notification_sending_date      DATE                      /* Teavituse teavituskalendrisse edastamise aeg */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON TABLE &&ADIT_SCHEMA..NOTIFICATION IS 'Teavituskalendri teavitused';
COMMENT ON COLUMN &&ADIT_SCHEMA..NOTIFICATION.ID IS 'Teavituse unikaalne identifikaator kohalikus andmebaasis';
COMMENT ON COLUMN &&ADIT_SCHEMA..NOTIFICATION.user_code IS 'Isiku v천i asutuse kood, kellele teavitus saadeti';
COMMENT ON COLUMN &&ADIT_SCHEMA..NOTIFICATION.document_id IS 'Teavitusega seotud dokumendi ID';
COMMENT ON COLUMN &&ADIT_SCHEMA..NOTIFICATION.event_date IS 'Teavitatava s체ndmuse toimumise kuup채ev ja kellaaeg';
COMMENT ON COLUMN &&ADIT_SCHEMA..NOTIFICATION.notification_type IS 'Teavituse t체체bi l체hinimi';
COMMENT ON COLUMN &&ADIT_SCHEMA..NOTIFICATION.notification_text IS 'Teavituse sisu';
COMMENT ON COLUMN &&ADIT_SCHEMA..NOTIFICATION.notification_id IS 'Teavituse ID teavituskalendris';
COMMENT ON COLUMN &&ADIT_SCHEMA..NOTIFICATION.notification_sending_date IS 'Teavituse teavituskalendrisse edastamise aeg';


CREATE TABLE &&ADIT_SCHEMA..DOCUMENT_FILE_TYPE
(
	ID                  NUMBER(18) NOT NULL,	
	DESCRIPTION			VARCHAR2(100) NOT NULL		/* Description of file type */
) TABLESPACE &&ADIT_TABLE_TABLESPACE.;

COMMENT ON COLUMN &&ADIT_SCHEMA..DOCUMENT_FILE_TYPE.description IS 'Description of file type';


/* Create Primary Key Constraints */
ALTER TABLE &&ADIT_SCHEMA..ACCESS_RESTRICTION ADD CONSTRAINT PK_ACCESS_RESTRICTIONS 
	PRIMARY KEY (remote_application, user_code) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..ADIT_LOG ADD CONSTRAINT PK_ADIT_LOG 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..ADIT_USER ADD CONSTRAINT PK_USERS 
	PRIMARY KEY (user_code) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT ADD CONSTRAINT PK_DOCUMENTS 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_DVK_STATUS ADD CONSTRAINT PK_DOCUMENT_DVK_STATUSES 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_FILE ADD CONSTRAINT PK_DOCUMENT_FILES 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_HISTORY ADD CONSTRAINT PK_DOCUMENT_HISTORY 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_HISTORY_TYPE ADD CONSTRAINT PK_DOCUMENT_HISTORY_TYPE 
	PRIMARY KEY (short_name) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_SHARING ADD CONSTRAINT PK_DOCUMENT_SHARINGS 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_SHARING_TYPE ADD CONSTRAINT PK_DOCUMENT_SHARING_TYPES 
	PRIMARY KEY (short_name) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_TYPE ADD CONSTRAINT PK_DOCUMENT_TYPES 
	PRIMARY KEY (short_name) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_WF_STATUS ADD CONSTRAINT PK_DOCUMENT_WF_STATUSES 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..DOWNLOAD_REQUEST_LOG ADD CONSTRAINT PK_DOWNLOAD_REQUEST_LOG 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..ERROR_LOG ADD CONSTRAINT PK_ERROR_LOG 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..METADATA_REQUEST_LOG ADD CONSTRAINT PK_METADATA_REQUEST_LOG 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..NOTIFICATION_TYPE ADD CONSTRAINT PK_NOTIFICATION_TYPES 
	PRIMARY KEY (short_name) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..REMOTE_APPLICATION ADD CONSTRAINT PK_REMOTE_APPLICATIONS 
	PRIMARY KEY (short_name) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..REQUEST_LOG ADD CONSTRAINT PK_REQUEST_LOG 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..SIGNATURE ADD CONSTRAINT PK_SIGNATURE 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..USER_NOTIFICATION ADD CONSTRAINT PK_NOTIFICATIONS 
	PRIMARY KEY (user_code, notification_type) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

ALTER TABLE &&ADIT_SCHEMA..USERTYPE ADD CONSTRAINT PK_USERTYPES 
	PRIMARY KEY (short_name) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;
 
 ALTER TABLE &&ADIT_SCHEMA..NOTIFICATION ADD CONSTRAINT PK_NOTIFICATION 
	PRIMARY KEY (ID) 
 USING INDEX TABLESPACE &&ADIT_INDEX_TABLESPACE.;

/* Create Foreign Key Constraints */
ALTER TABLE &&ADIT_SCHEMA..ACCESS_RESTRICTION ADD CONSTRAINT remote_application_short_name 
	FOREIGN KEY (remote_application) REFERENCES &&ADIT_SCHEMA..REMOTE_APPLICATION (short_name);

ALTER TABLE &&ADIT_SCHEMA..ACCESS_RESTRICTION ADD CONSTRAINT user_code 
	FOREIGN KEY (user_code) REFERENCES &&ADIT_SCHEMA..ADIT_USER (user_code);

ALTER TABLE &&ADIT_SCHEMA..ADIT_USER ADD CONSTRAINT usertype_short_name 
	FOREIGN KEY (usertype) REFERENCES &&ADIT_SCHEMA..USERTYPE (short_name);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT ADD CONSTRAINT document_dvk_status_id 
	FOREIGN KEY (document_dvk_status_id) REFERENCES &&ADIT_SCHEMA..DOCUMENT_DVK_STATUS (ID);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT ADD CONSTRAINT document_type_short_name 
	FOREIGN KEY (type) REFERENCES &&ADIT_SCHEMA..DOCUMENT_TYPE (short_name);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT ADD CONSTRAINT document_workflow_status_id 
	FOREIGN KEY (document_wf_status_id) REFERENCES &&ADIT_SCHEMA..DOCUMENT_WF_STATUS (ID);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT ADD CONSTRAINT parent_document_id 
	FOREIGN KEY (parent_id) REFERENCES &&ADIT_SCHEMA..DOCUMENT (ID);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT ADD CONSTRAINT doc_remote_app_short_name 
	FOREIGN KEY (remote_application) REFERENCES &&ADIT_SCHEMA..REMOTE_APPLICATION (short_name);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_FILE ADD CONSTRAINT document_id 
	FOREIGN KEY (document_id) REFERENCES &&ADIT_SCHEMA..DOCUMENT (ID);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_HISTORY ADD CONSTRAINT FK_DOCUMENT_HIST_DOCUMENT_HIST 
	FOREIGN KEY (document_history_type) REFERENCES &&ADIT_SCHEMA..DOCUMENT_HISTORY_TYPE (short_name);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_HISTORY ADD CONSTRAINT FK_DOCUMENT_HIST_REMOTE_APPLIC 
	FOREIGN KEY (remote_application) REFERENCES &&ADIT_SCHEMA..REMOTE_APPLICATION (short_name);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_HISTORY ADD CONSTRAINT FK_DOCUMENT_HISTORY_DOCUMENT 
	FOREIGN KEY (document_id) REFERENCES &&ADIT_SCHEMA..DOCUMENT (ID);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_HISTORY ADD CONSTRAINT history_user_code 
	FOREIGN KEY (user_code) REFERENCES &&ADIT_SCHEMA..ADIT_USER (user_code);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_SHARING ADD CONSTRAINT sharing_document_id 
	FOREIGN KEY (document_id) REFERENCES &&ADIT_SCHEMA..DOCUMENT (ID);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_SHARING ADD CONSTRAINT dvk_status_id 
	FOREIGN KEY (dvk_status_id) REFERENCES &&ADIT_SCHEMA..DOCUMENT_DVK_STATUS (ID);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_SHARING ADD CONSTRAINT sharing_type_short_name 
	FOREIGN KEY (sharing_type) REFERENCES &&ADIT_SCHEMA..DOCUMENT_SHARING_TYPE (short_name);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_SHARING ADD CONSTRAINT sharing_user_code 
	FOREIGN KEY (user_code) REFERENCES &&ADIT_SCHEMA..ADIT_USER (user_code);

ALTER TABLE &&ADIT_SCHEMA..DOCUMENT_SHARING ADD CONSTRAINT wf_status_id 
	FOREIGN KEY (wf_status_id) REFERENCES &&ADIT_SCHEMA..DOCUMENT_WF_STATUS (ID);

ALTER TABLE &&ADIT_SCHEMA..SIGNATURE ADD CONSTRAINT FK_SIGNATURE_DOCUMENT 
	FOREIGN KEY (document_id) REFERENCES &&ADIT_SCHEMA..DOCUMENT (ID);

ALTER TABLE &&ADIT_SCHEMA..SIGNATURE ADD CONSTRAINT FK_SIGNATURE_USER 
	FOREIGN KEY (user_code) REFERENCES &&ADIT_SCHEMA..ADIT_USER (user_code);

ALTER TABLE &&ADIT_SCHEMA..USER_NOTIFICATION ADD CONSTRAINT notification_type_short_name 
	FOREIGN KEY (notification_type) REFERENCES &&ADIT_SCHEMA..NOTIFICATION_TYPE (short_name);

ALTER TABLE &&ADIT_SCHEMA..USER_NOTIFICATION ADD CONSTRAINT notification_user_code 
	FOREIGN KEY (user_code) REFERENCES &&ADIT_SCHEMA..ADIT_USER (user_code);
	
/* Create Triggers */
CREATE SEQUENCE &&ADIT_SCHEMA..ADIT_LOG_ID_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER;

CREATE OR REPLACE TRIGGER &&ADIT_SCHEMA..SET_ADIT_LOG_ID
BEFORE INSERT
ON &&ADIT_SCHEMA..ADIT_LOG
FOR EACH ROW
BEGIN
  SELECT &&ADIT_SCHEMA..ADIT_LOG_ID_SEQ.NEXTVAL
  INTO :NEW.ID
  FROM DUAL;
END;
/

CREATE SEQUENCE &&ADIT_SCHEMA..DOCUMENT_ID_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE &&ADIT_SCHEMA..DOCUMENT_FILE_ID_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE &&ADIT_SCHEMA..DOCUMENT_HISTORY_ID_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE &&ADIT_SCHEMA..DOCUMENT_SHARING_ID_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE &&ADIT_SCHEMA..DOWNLOAD_REQUEST_LOG_ID_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE &&ADIT_SCHEMA..ERROR_LOG_ID_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE &&ADIT_SCHEMA..METADATA_REQUEST_LOG_ID_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE &&ADIT_SCHEMA..REQUEST_LOG_ID_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE &&ADIT_SCHEMA..SIGNATURE_ID_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE &&ADIT_SCHEMA..NOTIFICATION_ID_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE &&ADIT_SCHEMA..ACCESS_RESTR_ID_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
MINVALUE 1
NOCYCLE
NOCACHE
NOORDER;

/* Create indexes */
/* All primary key indexes were created with primary key constraints */
CREATE INDEX &&ADIT_SCHEMA..access_restriction_app_idx ON &&ADIT_SCHEMA..access_restriction (remote_application) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..access_restriction_user_idx ON &&ADIT_SCHEMA..access_restriction (user_code) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..adit_user_active_idx ON &&ADIT_SCHEMA..adit_user (active) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..adit_user_usertype_idx ON &&ADIT_SCHEMA..adit_user (usertype) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_dvkstatus_idx ON &&ADIT_SCHEMA..document (document_dvk_status_id) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_documenttype_idx ON &&ADIT_SCHEMA..document (type) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_wfstatus_idx ON &&ADIT_SCHEMA..document (document_wf_status_id) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_parent_idx ON &&ADIT_SCHEMA..document (parent_id) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_app_idx ON &&ADIT_SCHEMA..document (remote_application) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_file_docid_idx ON &&ADIT_SCHEMA..document_file (document_id) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_history_type_idx ON &&ADIT_SCHEMA..document_history (document_history_type) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_history_app_idx ON &&ADIT_SCHEMA..document_history (remote_application) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_history_docid_idx ON &&ADIT_SCHEMA..document_history (document_id) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_history_user_idx ON &&ADIT_SCHEMA..document_history (user_code) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_sharing_docid_idx ON &&ADIT_SCHEMA..document_sharing (document_id) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_sharing_dvkstatus_idx ON &&ADIT_SCHEMA..document_sharing (dvk_status_id) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_sharing_type_idx ON &&ADIT_SCHEMA..document_sharing (sharing_type) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_sharing_user_idx ON &&ADIT_SCHEMA..document_sharing (user_code) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..document_sharing_wfstatus_idx ON &&ADIT_SCHEMA..document_sharing (wf_status_id) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..signature_docid_idx ON &&ADIT_SCHEMA..signature (document_id) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..signature_user_idx ON &&ADIT_SCHEMA..signature (user_code) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..user_notification_type_idx ON &&ADIT_SCHEMA..user_notification (notification_type) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
CREATE INDEX &&ADIT_SCHEMA..user_notification_user_idx ON &&ADIT_SCHEMA..user_notification (user_code) TABLESPACE &&ADIT_INDEX_TABLESPACE.;
/* End of indexes */

-- ADIT user must have execute rights for dbms_crypto package
grant execute on dbms_crypto to &&ADIT_SCHEMA;

-- Stored procedure for doing file deflation directly in database
create or replace
procedure &&ADIT_SCHEMA..REMOVE_SIGNED_FILE_CONTENTS(
    result_rc out sys_refcursor,
    document_id in number,
    file_id in number,
    ddoc_start_offset in number,
    ddoc_end_offset in number
)
as
item_count number(10,0) := 0;
begin
    select  count(*)
    into    item_count
    from    document_file
    where   document_file.id = REMOVE_SIGNED_FILE_CONTENTS.file_id;
    
    if (item_count > 0) then
            select  count(*)
            into    item_count
            from    document_file
            where   document_file.id = REMOVE_SIGNED_FILE_CONTENTS.file_id
                    and document_file.document_id = REMOVE_SIGNED_FILE_CONTENTS.document_id;
            
            if (item_count > 0) then
                select  count(*)
                into    item_count
                from    document_file
                where   document_file.id = REMOVE_SIGNED_FILE_CONTENTS.file_id
                        and nvl(document_file.deleted, 0) = 0;
                
                if (item_count > 0) then
                    select  count(*)
                    into    item_count
                    from    document_file
                    where   document_file.id = REMOVE_SIGNED_FILE_CONTENTS.file_id
                            and nvl(document_file.file_data_in_ddoc, 0) = 0;
                
                    if (item_count > 0) then
	                    -- Calculate MD5 hash
	                    update  document_file
	                    set	    file_data = dbms_crypto.hash(nvl(file_data, empty_blob()), 2),
	                            ddoc_datafile_start_offset = REMOVE_SIGNED_FILE_CONTENTS.ddoc_start_offset,
	                            ddoc_datafile_end_offset = REMOVE_SIGNED_FILE_CONTENTS.ddoc_end_offset,
	                            file_data_in_ddoc = 1
	                    where   id = REMOVE_SIGNED_FILE_CONTENTS.file_id;
	                    
	                    open result_rc for
	                    select  'ok' as result_code
	                    from    dual;
	                else
	                    open result_rc for
	                    select  'file_data_already_moved' as result_code
	                    from    dual;
	                end if;
                else
                    open result_rc for
                    select  'file_is_deleted' as result_code
                    from    dual;
                end if;
            else
                open result_rc for
                select  'file_does_not_belong_to_document' as result_code
                from    dual;
            end if;
    else
        open result_rc for
        select  'file_does_not_exist' as result_code
        from    dual;
    end if;
end;
/

-- Stored procedure for doing file deflation directly in database
create or replace
procedure &&ADIT_SCHEMA..DEFLATE_FILE(
    result_rc out sys_refcursor,
    document_id in number,
    file_id in number,
    mark_deleted in number,
    fail_if_signature in number
)
as
item_count number(10,0) := 0;
begin
    select  count(*)
    into    item_count
    from    document_file
    where   document_file.id = file_id;
    
    if (item_count > 0) then
            select  count(*)
            into    item_count
            from    document_file
            where   document_file.id = DEFLATE_FILE.file_id
                    and document_file.document_id = DEFLATE_FILE.document_id;
            
            if (item_count > 0) then
                select  count(*)
                into    item_count
                from    document_file
                where   document_file.id = DEFLATE_FILE.file_id
                        and nvl(document_file.deleted, 0) = 0;
                
                if (item_count > 0) then
	                select  count(*)
	                into    item_count
	                from    document_file
	                where   document_file.id = DEFLATE_FILE.file_id
	                        and nvl(document_file.document_file_type_id, 1) > 1;
                
	                if ((item_count = 0) or (DEFLATE_FILE.fail_if_signature <> 1)) then
	                	-- Calculate MD5 hash
	                    update	document_file
	                    set	    file_data = dbms_crypto.hash(nvl(file_data, empty_blob()), 2),
	                            deleted = (case when DEFLATE_FILE.mark_deleted = 1 then 1 else document_file.deleted end)
	                    where   id = DEFLATE_FILE.file_id;
	                    
	                    open result_rc for
	                    select  'ok' as result_code
	                    from    dual;
                    else
	                    open result_rc for
	                    select  'cannot_delete_signature_container' as result_code
	                    from    dual;
                    end if;
                else
                    open result_rc for
                    select  'already_deleted' as result_code
                    from    dual;
                end if;
            else
                open result_rc for
                select  'file_does_not_belong_to_document' as result_code
                from    dual;
            end if;
    else
        open result_rc for
        select  'file_does_not_exist' as result_code
        from    dual;
    end if;
end;
/
