package ee.adit.test.service;

import java.util.ArrayList;

import ee.adit.pojo.ArrayOfFileType;
import ee.adit.service.DocumentService;
import junit.framework.TestCase;

/**
 * The class <code>DocumentServiceTest</code> contains tests for the class
 * {@link <code>DocumentService</code>}
 *
 * @pattern JUnit Test Case
 *
 * @generatedBy CodePro at 7.04.11 11:32
 *
 * @author Jaak
 *
 * @version $Revision$
 */
public class DocumentServiceTest extends TestCase {

	/**
	 * Construct new test instance
	 *
	 * @param name the test name
	 */
	public DocumentServiceTest(String name) {
		super(name);
	}
	
	public void testFileIsOfRequestedType() {
		ArrayOfFileType types = null;
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_DOCUMENT_FILE, types));
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_SIGNATURE_CONTAINER, types));
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_SIGNATURE_CONTAINER_DRAFT, types));
		
		types = new ArrayOfFileType();
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_DOCUMENT_FILE, types));
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_SIGNATURE_CONTAINER, types));
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_SIGNATURE_CONTAINER_DRAFT, types));
		
		types.setFileType(new ArrayList<String>());
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_DOCUMENT_FILE, types));
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_SIGNATURE_CONTAINER, types));
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_SIGNATURE_CONTAINER_DRAFT, types));
		
		types.getFileType().add(DocumentService.FILETYPE_NAME_DOCUMENT_FILE);
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_DOCUMENT_FILE, types));
		assertFalse(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_SIGNATURE_CONTAINER, types));
		assertFalse(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_SIGNATURE_CONTAINER_DRAFT, types));
		
		types.getFileType().add(DocumentService.FILETYPE_NAME_SIGNATURE_CONTAINER);
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_DOCUMENT_FILE, types));
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_SIGNATURE_CONTAINER, types));
		assertFalse(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_SIGNATURE_CONTAINER_DRAFT, types));
		
		types.getFileType().add(DocumentService.FILETYPE_NAME_SIGNATURE_CONTAINER_DRAFT);
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_DOCUMENT_FILE, types));
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_SIGNATURE_CONTAINER, types));
		assertTrue(DocumentService.fileIsOfRequestedType(DocumentService.FILETYPE_SIGNATURE_CONTAINER_DRAFT, types));
	}
}

/*$CPS$ This comment was generated by CodePro. Do not edit it.
 * patternId = com.instantiations.assist.eclipse.pattern.testCasePattern
 * strategyId = com.instantiations.assist.eclipse.pattern.testCasePattern.junitTestCase
 * additionalTestNames = 
 * assertTrue = false
 * callTestMethod = true
 * createMain = false
 * createSetUp = false
 * createTearDown = false
 * createTestFixture = false
 * createTestStubs = false
 * methods = 
 * package = ee.adit.test.service
 * package.sourceFolder = adit-war/src/test/java
 * superclassType = junit.framework.TestCase
 * testCase = DocumentServiceTest
 * testClassType = ee.adit.service.DocumentService
 */