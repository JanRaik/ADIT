1. Download and install m2eclipse plugin for Eclipse.
2. Download and install maven2
3. Configure Tomcat Maven plugin (in project pom.xml):

<plugin>
  <groupId>org.codehaus.mojo</groupId>
  <artifactId>tomcat-maven-plugin</artifactId>
  <configuration>
    <server>tomcat6</server>
    <warFile>${baseDir}/target/adit.war</warFile>
  </configuration>
</plugin>

4. Create and configure Maven2 settings:
 - create file: [MAVEN2_HOME]\conf\settings.xml: 

<servers>
  <server>
    <id>tomcat6</id>
    <username>tomcat</username>
    <password>tomcat</password>
  </server>
</servers> 

5. Create Maven2 default build command:
Right click on pom.xml -> "Run as" -> "Run configurations":
 -> Maven Build -> New:
   a. Set Base directory to project base directory
   b. Set "Goals" to "tomcat:redeploy"
   c. Set "Maven Runtime" to "External" (configure it) 

6. Run the maven build, type "ALT + SHIFT + X" and then "M".

NB! Sometimes the maven goal "tomcat:redeploy" does not undeploy the application correctly in tomcat. This is related to operating system
issus with locking files. The cure for that is to add some parameters to tomcat context configuration (context.xml) like this:

<Context reloadable="true" antiResourceLocking="true">

6. JDK 1.6 and the Xerces library included in this project (xercesImpl.jar) cause a conflict when deploying to Tomcat.
   To resolve this problem, define the JAVA_ENDORSED_DIRS environment variable and point it to the directory, where 
   the xercesImpl.jar is located. This will replace the JDK version of Xerces XML Parser.